import localFont from 'next/font/local';
import fs from 'fs/promises';
import path from 'path';
import './globals.css';
import Header from '@/components/Header/Header';
import Footer from '@/components/Footer/Footer';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

async function fetchLeaguesAndTeams() {
  const leaguesFilePath = path.join(process.cwd(), 'lib', 'data', 'leagues.json');
  const leaguesFile = await fs.readFile(leaguesFilePath, 'utf8');
  const leagues = JSON.parse(leaguesFile).leagues;

  const teamsFilePath = path.join(process.cwd(), 'lib', 'data', 'teams.json');
  const teamsFile = await fs.readFile(teamsFilePath, 'utf8');
  const teams = JSON.parse(teamsFile).teams;

  const mergedData = [
    ...leagues.map(league => ({ ...league, crest: league.emblem, emblem: undefined })), 
    ...teams,
  ];

  return mergedData; 
}

export default async function RootLayout({ children }) {
  const mergedData = await fetchLeaguesAndTeams(); 
  
  return (
    <html lang='en'>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Header data={mergedData} />
        {children}
        <Footer />
      </body>
    </html>
  );
}
